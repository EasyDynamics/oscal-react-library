---
name: Auto-update example app after Dependabot

on:
  # Because we so heavily reference the pull request number within the workflow,
  # it is preferable to use the pull_request_target. This will run after every
  # pull request merged to develop that touches the main package-lock.json
  # pull_request_target:
  #   types: [closed]
  #   branches: [develop]
  #   paths: ["package-lock.json"]
  pull_request:
    branches: [feature/automate-example-app-package-updates]

jobs:
  update:
    # If the pull request was closed then nothing needs to be done
    # if: github.event.pull_request.merged == 'true'
    runs-on: ubuntu-latest
    name: Synchronize version
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: develop
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"
      - name: Globally update npm
        run: npm install -g npm@latest
      - name: Install library dependencies
        run: npm ci
      - name: Update example application dependencies
        run: npm install
        working-directory: example
      - name: Commit back changes to example app
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: >-
            Synchronize OSCAL Viewer example app depenencies
          title: Synchronize example app `package-lock.json` (#${{ github.event.pull_request.number }})
          body: |
            Pull request #${{ github.event.pull_request.number }} which updated some dependencies
            `/package-lock.json` was recently merged. This synchronizes those same updates back into
            the `example/package-lock.json` file.
          branch: automation/update-dependencies/${{ github.event.pull_request.number }}
          base: develop
          committer: noreply@easydynamics.com
          author: Easy Dynamics Automation <noreply@easydynamics.com>
