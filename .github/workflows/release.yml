name: Create a New Release
on:
  workflow_dispatch:
    inputs:
      type:
        description:
          'The version type of this release. Must be either "feature" or "bug", representing a new feature release or a bug fix release, respectively,'
        required: true

jobs:
  release:
    # Validate the input type before running
    if: ${{ github.event.inputs.type }} == 'feature' || ${{ github.event.inputs.type }} == 'bug'
    name: Create a New Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          cache: npm

      - name: Update Npm
        run: npm install -g npm@latest

      - name: Set Version (Feature)
        if: ${{ github.event.inputs.type }} == 'feature'
        run: |
          npm version minor
          cd example
          npm version minor

      - name: Set Version (Bug Fix)
        if: ${{ github.event.inputs.type }} == 'bug'
        run: |
          npm version patch
          cd example
          npm version patch

      # Output the new package version to environment variable
      - name: Get Package Version
        run: echo "PKG_VERSION=$(npm pkg get version | tr -d '"')" >> $GITHUB_ENV

      - name: Build OSCAL Viewer
        working-directory: example
        run: |
          npm ci
          npm run build
          zip viewer.zip build

      - name: Create a GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name:
            ${{ env.PKG_VERSION }}
          files:
            example/viewer.zip

      # Commit the new version and push changes to main, as well as a "tag-{version}" branch
      - name: Push to Main and Tag Branch
        run: |
          git add package.json package-lock.json example/package.json example/package-lock.json
          git commit -m "Create Release Version ${{ env.PKG_VERSION }}"
          git push origin main
          git push -u origin tag-${{ env.PKG_VERSION }}